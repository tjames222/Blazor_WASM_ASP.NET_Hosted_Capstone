@page "/user-dashboard"

@using devSplain.Shared.Data
@using devSplain.Shared.Models

@inject PostDataStoreSingleton _posts

<AuthorizeView>
    <Authorized>
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg">
                     <div class="card bg-dark w-100">
                         <a class="card-block stretched-link text-decoration-none" href="https://dev-60744470.okta.com/login/login.htm">
                             <div class="card-body">
                                 <h3 class="h3 text-white text-center">Edit User Info</h3>
                             </div>
                         </a>
                    </div>
                </div>
                <div class="col-lg">
                     <div class="card bg-dark w-100">
                         <a class="card-block stretched-link text-decoration-none" href="">
                             <div class="card-body">
                                 <h3 class="h3 text-white text-center">Edit Author Info</h3>
                             </div>
                         </a>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <br />
        <div class="card w-100 h-100" style="background-color: #ffa114">
                         <div class="card-body">
                             <h3 class="h3 text-white text-center">My Posts</h3>
                                 <RadzenDataGrid Count="7" Data="@_posts.PostsList" Style="background-color: transparent"  AllowSorting="false" AllowFiltering="false" AllowPaging="false" PageSize="7"
                                            TItem="PostModel" SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedPost>
                                    <Columns>
                                        <RadzenDataGridColumn TItem="PostModel" Property="Title" Filterable="false" Frozen="true" Width="80px" TextAlign="TextAlign.Left" />
                                        @*<RadzenDataGridColumn TItem="PostModel" Title="Image" Sortable="false" Filterable="false" Width="80px">
                                            <Template Context="data">
                                                @if (string.IsNullOrEmpty(data.BlobURL))
                                                {
                                                    <RadzenImage src="Images/default-avatar.png" alt="Image" style="width: 40px; height: 40px; border-radius: 8px;" />
                                                }
                                                else
                                                {
                                                    try
                                                    {
                                                        <RadzenImage Path="" style="width: 40px; height: 40px; border-radius: 8px;" />
                                                    }
                                                    catch (Exception ex)
                                                    {
                                                        Log.Error("Error: {0}", ex);
                                                    }
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>*@
                                        <RadzenDataGridColumn TItem="PostModel" Property="CreatedOn" Width="50px"/>
                                    </Columns>
                                </RadzenDataGrid>
                         </div>
                    </div>
    </Authorized>
    <NotAuthorized>
        <p class="text-white">Restricted User area. You are not authorized to view this page. Please reach out to support if you need access.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    IList<PostModel> selectedPost;

    protected override async Task OnInitializedAsync()
    {
        // _posts.PostsList = await _http.GetFromJsonAsync<List<PostModel>>($"api/Post/GetAll");
    }
}
